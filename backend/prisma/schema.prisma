datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    Int     @id @default(autoincrement())
  providerId String @unique
  email String  @unique
  nickName  String? @unique
  firstName String?
  lastName  String?
  provider String?
  avatar String?
  secretOpt           String?
  otpIsEnabled        Boolean              @default(false)
  level               Int                  @default(10)
  cover               String?
}


// model User {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   email     String   @unique
//   name      String?
//   role      Role     @default(USER)
//   mode     String[]
// }

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   published Boolean  @default(false)
//   title     String   @db.VarChar(255)
//   author    User?    @relation(fields: [authorId], references: [id])
//   authorId  Int?
// }

// enum Role {
//   USER
//   ADMIN

// }



// model Profile {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   bio       String?
//   user    User?    @relation(fields: [userId], references: [id])
//   userId    Int      @unique
// }

// model Game {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   published Boolean  @default(false)
//   title     String   @db.VarChar(255)
//   player    User?     @relation(fields: [userId], references: [id])
// }


// model channel {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   published Boolean  @default(false)
//   title     String   @db.VarChar(255)
//   owner    User?    @relation(fields: [ownerId], references: [id])
//   ownerId  Int?
// }